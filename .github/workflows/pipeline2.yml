name: CI/CD for Angular Front-End

on:
  push:
    branches: [ frontOff ]

jobs:
  # build-and-test-angular:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'  # Adjust if needed

  #     - name: Cache Node.js modules
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-build-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Run unit tests
  #       run: npm test  # Replace with your test command

  #     - name: Build Angular application
  #       run: npm run build -- --prod

  #     - name: Upload build artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dist
  #         path: dist

  #build-docker-image
  CI:
    runs-on: ubuntu-latest
  #  needs: build-and-test-angular

    steps:
      - uses: actions/checkout@v3

      # - name: Download build artifacts
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: dist
      #     path: dist
     
      - name: Build Docker image
        run: docker build -t chetouiiftikhar/frontoff-img:${{ github.sha }} .
      - name: Verify image build
        run: docker images
      - name: Tag image for latest deployment (optional)
        run: docker tag chetouiiftikhar/frontoff-img:${{ github.sha }} chetouiiftikhar/frontoff-img:latest

 # push-to-dockerhub:
  CD: 
    runs-on: ubuntu-latest
    needs: CI
  
    steps:
      - name: Login to Docker Hub (requires secret)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
     
      - name: Push image to Docker Hub
        run: docker push chetouiiftikhar/frontoff-img:latest
