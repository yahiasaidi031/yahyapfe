name: CI/CD for Angular Front-End

on:
  push:
    branches: [ frontOff ]

jobs:
  build-and-test-angular:
    runs-on: ubuntu-latest

    steps:
      - name: Increase Git buffer size
        run: git config --global http.postBuffer 1048576000

      - name: Configure HTTP Version
        run: git config --global http.version HTTP/1.1

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies for Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3 libgconf-2-4 libgtk-3-0 xvfb

      - name: Start xvfb
        run: |
          export DISPLAY=':99.0'
          nohup Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run unit tests
        run: npm test -- --no-watch --browsers=ChromeHeadlessNoSandbox

      - name: Build Angular application
        run: npm run build -- --prod

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  CI:
    runs-on: self-hosted
    needs: build-and-test-angular

    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Build Docker image
        run: docker build -t yahya184/frontoff-img:${{ github.sha }} .

      - name: Verify image build
        run: docker images

      - name: Tag image for latest deployment (optional)
        run: docker tag yahya184/frontoff-img:${{ github.sha }} yahya184/frontoff-img:latest

  CD:
    runs-on: self-hosted
    needs: CI

    steps:
      - name: Login to Docker Hub (requires secret)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
     
      - name: Push image to Docker Hub
        run: docker push yahya184/frontoff-img:latest


